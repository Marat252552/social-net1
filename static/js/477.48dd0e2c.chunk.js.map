{"version":3,"file":"static/js/477.48dd0e2c.chunk.js","mappings":"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","sources":["webpack://first-project/./src/Components/Profile/Profile.module.css?f51d","webpack://first-project/./src/Components/Profile/Comments/newcom.module.css?da05","Components/Profile/Comments/newcom.jsx","Components/Profile/Wall/StatusContainer.js","webpack://first-project/./src/Components/Profile/Wall/wall.module.css?1703","Components/Profile/Wall/wall.jsx","webpack://first-project/./src/Components/Profile/Comments/oldcom.module.css?0e5b","Components/Profile/Comments/oldcom.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__FWBJT\",\"Summary\":\"Profile_Summary__Mibic\",\"comments\":\"Profile_comments__hncJb\"};","// extracted by mini-css-extract-plugin\nexport default {\"Newcom\":\"newcom_Newcom__l5jvd\"};","import React from 'react';\r\nimport p from './newcom.module.css';\r\nimport UserSmallIcon from './../../../Redux/Pictures/UserSmallIcon.png';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea, Errors, Fields } from '../../../Validators/Validators';\r\n\r\nconst Newcom = (props) => {\r\n    return (\r\n        <div className={p.Newcom}>\r\n            <div>\r\n                <img src={(!props.profilePage.mainInfo.photos.large) ? UserSmallIcon : props.profilePage.mainInfo.photos.large}></img>\r\n            </div>\r\n            <div>\r\n                <NewPost addPost={props.addPost} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 =  Errors.MaxLength(10);\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Fields.Textarea}\r\n                name='post'\r\n                placeholder='Enter your post'\r\n                validate={[maxLength50, Errors.fieldRequired]}\r\n            />\r\n            <button>Create post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({\r\n    form: 'post'\r\n})(PostForm);\r\n\r\nconst NewPost = (props) => {\r\n    let onSubmit = (formData) => {\r\n        props.addPost(formData.post)\r\n    }\r\n    return <PostReduxForm onSubmit={onSubmit} />\r\n}\r\n\r\nexport default Newcom;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ProfileAPI } from \"../../../API/Api\";\r\nimport { GetStatusThunkAC, updateStatusField, PutStatusThunk } from \"../../../Redux/profilePageReducer\";\r\nimport { setStatus } from \"../../../Redux/profilePageReducer\";\r\n\r\nconst statusField = React.createRef('statusField');\r\n\r\nconst noStatus = 'No status';\r\n\r\nexport class Status extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.GetStatusThunkAC === undefined) {\r\n            return null\r\n        } else {\r\n            this.props.GetStatusThunkAC(26279)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                ...this.state,\r\n                currentStatusField: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    state = {\r\n        editMode: false,\r\n        currentStatusField: this.props.status\r\n    }\r\n\r\n    changeCurrentStatus = (text) => {\r\n        this.setState({\r\n            ...this.state,\r\n            currentStatusField: text\r\n        })\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                editMode: true\r\n            }\r\n        )\r\n    }\r\n\r\n    deActivateEditMode = (text) => {\r\n        this.setState({\r\n            ...this.state,\r\n            editMode: false\r\n        })\r\n        this.props.PutStatusThunk(text)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.editMode === false) {\r\n            return <span\r\n                onDoubleClick={this.activateEditMode}>\r\n                    {(!this.props.status) ? noStatus : this.props.status}\r\n            </span>\r\n        } else {\r\n            return <textarea\r\n                autoFocus={true}\r\n                ref={statusField}\r\n                onBlur={() => { this.deActivateEditMode(this.state.currentStatusField) }}\r\n                onChange={() => { this.changeCurrentStatus(statusField.current.value) }}\r\n                value={this.state.currentStatusField}>\r\n            </textarea>\r\n        }\r\n    }\r\n}\r\n\r\nconst StatusWithHook = (props) => {\r\n    // props.GetStatusThunkAC(26279)\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    let state = 15;\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let changeCurrentStatus = (text) => {\r\n        setStatus(text)\r\n    }\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let deActivateEditMode = (text) => {\r\n        setEditMode(false)\r\n        props.PutStatusThunk(text)\r\n    }\r\n    return <div>\r\n        {(editMode === false) ?\r\n            <span\r\n                onDoubleClick={activateEditMode}>\r\n                {(!props.status) ? noStatus : props.status}\r\n            </span>\r\n            : <textarea\r\n                autoFocus={true}\r\n                ref={statusField}\r\n                onBlur={() => { deActivateEditMode(status) }}\r\n                onChange={() => { changeCurrentStatus(statusField.current.value) }}\r\n                value={status}>\r\n            </textarea>\r\n        }\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nexport const StatusContainer = connect(mapStateToProps, { updateStatusField, setStatus, GetStatusThunkAC, PutStatusThunk })(Status)","// extracted by mini-css-extract-plugin\nexport default {\"gridwall\":\"wall_gridwall__R8KPX\",\"icon\":\"wall_icon__h7EYS\",\"friends\":\"wall_friends__A3kRx\"};","import React from 'react';\r\nimport { StatusContainer } from './StatusContainer';\r\nimport s from './wall.module.css';\r\n\r\nconst Friend = (props) => {\r\n    return (\r\n        <div>\r\n            <img className={s.icon} src={props.src} />\r\n            <span>{props.person}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CreateWall = (props) => {\r\n    return (\r\n        <Friend src={props.src} person={props.person}/>\r\n    )\r\n}\r\n\r\n\r\nconst Wall = (props) => {\r\n    let Wall2 = props.profilePage.friends.map(p => <CreateWall src={p.src} person={p.person} />)\r\n    return (\r\n    <div className={s.gridwall}>\r\n            <h1>Online</h1>\r\n            <h2>{props.profilePage.mainInfo.fullName}</h2>\r\n            <p>About me</p>\r\n            <p>{props.profilePage.mainInfo.aboutMe}</p>\r\n            <StatusContainer />\r\n            <h2>My friends</h2>\r\n            <div className={s.friends}>\r\n                {Wall2}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wall;","// extracted by mini-css-extract-plugin\nexport default {\"photo\":\"oldcom_photo__Cnhgy\",\"Oldcom\":\"oldcom_Oldcom__zMlUX\"};","import React from 'react';\r\nimport p from './oldcom.module.css';\r\nimport UserSmallIcon from './../../../Redux/Pictures/UserSmallIcon.png';\r\n\r\nclass Oldcom extends React.PureComponent {\r\n  render() {\r\n    console.log('rendered')\r\n    return <div className={p.Oldcom}>\r\n    <div>\r\n      <img className={p.photo} src={this.props.src}></img>\r\n      <span>2</span><button>like</button>\r\n    </div>\r\n    <div className={p.Textfield}>\r\n      <span><strong>{this.props.person}</strong></span>\r\n      <p>{this.props.text}</p>\r\n    </div>\r\n  </div>\r\n  }\r\n}\r\n\r\n// const Oldcom = (props) => {\r\n//   return <div className={p.Oldcom}>\r\n//     <div>\r\n//       <img className={p.photo} src={props.src}></img>\r\n//       <span>2</span><button>like</button>\r\n//     </div>\r\n//     <div className={p.Textfield}>\r\n//       <span><strong>{props.person}</strong></span>\r\n//       <p>{props.text}</p>\r\n//     </div>\r\n//   </div>\r\n// }\r\nlet ComMap = (props) => {\r\n  let commentsData2 = props.commentsData.map(p => <Oldcom text={p.text} person={p.person} src={(!p.src)? UserSmallIcon : p.src} />);\r\n  return (commentsData2);\r\n}\r\n\r\nexport default ComMap;\r\n","import React from 'react';\r\nimport p from './Profile.module.css';\r\nimport Newcom from './Comments/newcom';\r\nimport Wall from './Wall/wall';\r\nimport ComMap from './Comments/oldcom';\r\nimport UserSmallIcon from './../../Redux/Pictures/UserSmallIcon.png';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={p.profile}>\r\n        <div className={p.Summary}>\r\n          <img src={(!props.profilePage.mainInfo.photos.large)? UserSmallIcon : props.profilePage.mainInfo.photos.large}></img>\r\n          <a href=''>Friends: 0</a>\r\n          <a href=''>Notes: 0</a>\r\n          <a href=''>Groups: 0</a>\r\n          <a href=''>Gifts: 0</a>\r\n        </div>\r\n        <div><Wall profilePage={props.profilePage} /></div>\r\n      </div>\r\n      <div>\r\n        <h3>Comments</h3>\r\n        <Newcom profilePage={props.profilePage} addPost={props.addPost} updateNewPostField={props.updateNewPostField}/>\r\n        <div className={p.comments}>\r\n          <ComMap commentsData={props.profilePage.commentsData} />\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { addPost, ProfilePageThunkAC } from '../../Redux/profilePageReducer';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from '../Users/preloader';\r\nimport { withAuthRedirect, withRouter } from '../../hoc/hoc';\r\nimport { compose } from 'redux';\r\nimport { ProfileSelectors } from '../../Redux/Selectors';\r\nimport { createSelector } from 'reselect';\r\n\r\nclass ProfileAPIComponent extends React.Component {\r\n  componentDidMount() {\r\n    this.props.ProfilePageThunkAC(this.props.router)\r\n  }\r\n  render() {\r\n    return <div>\r\n      {(this.props.profilePage.isLoading === true) ? <Preloader /> : <Profile\r\n        profilePage={this.props.profilePage}\r\n        updateNewPostField={this.props.updateNewPostField}\r\n        addPost={this.props.addPost}\r\n        isAuthorized={this.props.isAuthorized}\r\n      />}\r\n    </div>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: ProfileSelectors.getProfilePage(state),\r\n    isAuthorized: ProfileSelectors.getIsAuthorized(state)\r\n  }\r\n}\r\n\r\nconst ProfileContainer = compose(\r\n  withRouter,\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, { addPost, ProfilePageThunkAC})\r\n)(ProfileAPIComponent);\r\n\r\n\r\nexport default ProfileContainer;"],"names":["maxLength50","Errors","PostReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Fields","name","placeholder","validate","NewPost","formData","addPost","post","className","p","src","profilePage","mainInfo","photos","large","UserSmallIcon","statusField","React","noStatus","Status","state","editMode","currentStatusField","status","changeCurrentStatus","text","setState","activateEditMode","deActivateEditMode","PutStatusThunk","undefined","this","GetStatusThunkAC","prevProps","prevState","onDoubleClick","autoFocus","ref","onBlur","onChange","current","value","StatusContainer","connect","updateStatusField","setStatus","Friend","s","person","CreateWall","Wall2","friends","map","fullName","aboutMe","Oldcom","console","log","commentsData","href","updateNewPostField","ProfileAPIComponent","ProfilePageThunkAC","router","isLoading","isAuthorized","compose","withRouter","withAuthRedirect","ProfileSelectors"],"sourceRoot":""}