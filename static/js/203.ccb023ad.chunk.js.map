{"version":3,"file":"static/js/203.ccb023ad.chunk.js","mappings":"4MACA,G,QAAuB,uBAAvB,EAAuD,yBAAvD,EAAiO,4BCAjO,EAAuB,qBAAvB,EAAwD,0BAAxD,EAA4F,wBAA5F,EAA2H,qB,SCe3H,EAbmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,iBAAKC,UAAWC,EAAY,WACxB,gBAAKD,UAAWC,EAAQC,IAAI,gHAC5B,4BACI,iBAAMF,UAAWC,EAAQE,GAAIL,EAAK,SAAED,EAAMO,UAC1C,cAAGJ,UAAWC,EAAU,SAAEJ,EAAMQ,eAIhD,ECbA,EAA4B,iCAA5B,EAA4E,oCCE/DC,EAAc,SAACT,GACxB,OAAqB,IAAjBA,EAAMO,QACC,SAACG,EAAa,CAACC,KAAMX,EAAMW,OACV,IAAjBX,EAAMO,QACN,SAACK,EAAgB,CAACD,KAAMX,EAAMW,YADlC,CAGX,EAEMD,EAAgB,SAACV,GACnB,OAAO,gBAAKG,UAAWU,EAAY,UAC/B,uBAAIb,EAAMW,QAElB,EAEMC,EAAmB,SAACZ,GACtB,OAAO,gBAAKG,UAAWU,EAAe,UAClC,uBAAIb,EAAMW,QAElB,E,6BCdIG,EAAiB,SAACd,GAElB,OADmBA,EAAMe,KAAKC,KAAI,SAAAH,GAAC,OAAI,SAAC,EAAU,CAACX,GAAIW,EAAEX,GAAIK,OAAQM,EAAEN,OAAQC,QAASK,EAAEL,SAAW,GAEzG,EAEIS,EAAkB,SAACjB,GAEnB,OADoBA,EAAMe,KAAKC,KAAI,SAAAH,GAAC,OAAI,SAACJ,EAAW,CAACF,OAAQM,EAAEN,OAAQI,KAAME,EAAEF,MAAQ,GAE3F,EAqBMO,EAAa,SAAClB,GAIhB,OAAO,SAACmB,EAAgB,CAACC,SAHV,SAACC,GACZrB,EAAMsB,WAAWD,EAASb,QAC9B,GAEJ,EAEMe,EAAcC,EAAAA,EAAAA,UAAiB,IAgB/BL,GAAmBM,EAAAA,EAAAA,GAAU,CAC/BC,KAAM,cADeD,EAdL,SAACzB,GACjB,OACI,kBAAMoB,SAAUpB,EAAM2B,aAAa,WAC/B,SAACC,EAAA,EAAK,CACNC,UAAWC,EAAAA,EAAAA,SACXC,YAAa,qBACbC,KAAM,UACNC,SAAU,CAACV,EAAaC,EAAAA,EAAAA,kBAExB,uCAGZ,IAMA,EA9CgB,SAACxB,GACb,OACI,0BACI,iBAAKG,UAAWU,EAAU,WACtB,gBAAKV,UAAWU,EAAO,UAClB,SAACC,EAAc,CAACC,KAAMf,EAAMkC,YAAYC,iBAE7C,0BACK,SAAClB,EAAe,CAACF,KAAMf,EAAMkC,YAAYE,kBAE9C,gBAAKjC,UAAWU,EAAa,UACzB,SAACK,EAAU,CAACI,WAAYtB,EAAMsB,mBAMlD,ECjBA,GALyBe,EAAAA,EAAAA,IACrBC,EAAAA,GACAC,EAAAA,EAAAA,KARkB,SAACC,GACnB,MAAO,CACHN,YAAaM,EAAMN,YAE3B,GAI6B,CAAEZ,WAAAA,EAAAA,IAFNe,CAGvBI,E","sources":["webpack://first-project/./src/Components/Dialogs/Dialogs.module.css?db5c","webpack://first-project/./src/Components/Dialogs/dialog.module.css?c642","Components/Dialogs/dialog.jsx","webpack://first-project/./src/Components/Dialogs/Currentdialogs/CurrentDialog.module.css?58b2","Components/Dialogs/Currentdialogs/CurrentDialog.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Dialogs_list__a3qIb\",\"Dialogs\":\"Dialogs_Dialogs__Bjo-w\",\"name\":\"Dialogs_name__cjI34\",\"Dimg\":\"Dialogs_Dimg__omLYW\",\"oneDialog\":\"Dialogs_oneDialog__QRO-q\",\"message\":\"Dialogs_message__S5fBE\",\"NewMessage\":\"Dialogs_NewMessage__2kTsW\"};","// extracted by mini-css-extract-plugin\nexport default {\"Dimg\":\"dialog_Dimg__Cl1Gu\",\"oneDialog\":\"dialog_oneDialog__5tN0j\",\"message\":\"dialog_message__NYdEG\",\"name\":\"dialog_name__co0HV\"};","import React from 'react';\r\nimport s from './dialog.module.css';\r\n\r\nconst makeDialog = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.oneDialog}>\r\n            <img className={s.Dimg} src='https://st.depositphotos.com/2680101/3651/i/450/depositphotos_36512893-stock-photo-abstract-background.jpg'></img>\r\n            <div>\r\n                <span className={s.name} to={path}>{props.person}</span>\r\n                <p className={s.message}>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default makeDialog;","// extracted by mini-css-extract-plugin\nexport default {\"MyMessage\":\"CurrentDialog_MyMessage__REPU8\",\"AlienMessage\":\"CurrentDialog_AlienMessage__0tnQ5\"};","import React from 'react';\r\nimport p from './CurrentDialog.module.css';\r\n\r\nexport const MakeMessage = (props) => {\r\n    if (props.person === 1) {\r\n        return <MakeMyMessage text={props.text} />\r\n    } else if (props.person === 2) {\r\n        return <MakeAlienMessage text={props.text} />;\r\n    }\r\n}\r\n\r\nconst MakeMyMessage = (props) => {\r\n    return <div className={p.MyMessage}>\r\n        <p>{props.text}</p>\r\n    </div>\r\n}\r\n\r\nconst MakeAlienMessage = (props) => {\r\n    return <div className={p.AlienMessage}>\r\n        <p>{props.text}</p>\r\n    </div>\r\n}","import React from 'react';\r\nimport p from './Dialogs.module.css';\r\nimport MakeDialog from './dialog.jsx';\r\nimport { MakeMessage } from './Currentdialogs/CurrentDialog';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Errors, Fields } from '../../Validators/Validators';\r\n\r\nlet DataMapDialogs = (props) => {\r\n    let dialogsData2 = props.item.map(p => <MakeDialog id={p.id} person={p.person} message={p.message} />);\r\n    return dialogsData2;\r\n}\r\n\r\nlet DataMapMessages = (props) => {\r\n    let messagesData2 = props.item.map(p => <MakeMessage person={p.person} text={p.text} />);\r\n    return messagesData2;\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={p.Dialogs}>\r\n                <div className={p.list}>\r\n                    {<DataMapDialogs item={props.dialogsPage.dialogsData} />}\r\n                </div>\r\n                <div>\r\n                    {<DataMapMessages item={props.dialogsPage.messagesData} />}\r\n                </div>\r\n                <div className={p.NewMessage}>\r\n                    <NewMessage addMessage={props.addMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst NewMessage = (props) => {\r\n    let onSubmit = (formData) => {\r\n        props.addMessage(formData.message)\r\n    }\r\n    return <MessageReduxForm onSubmit={onSubmit}/>\r\n}\r\n\r\nconst maxLength10 = Errors.MaxLength(10);\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n            component={Fields.Textarea}\r\n            placeholder={'Enter your message'} \r\n            name={'message'}\r\n            validate={[maxLength10, Errors.fieldRequired]}\r\n            />\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    form: 'NewMessage'\r\n})(MessageForm);\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/hoc';\r\nimport { addMessage } from '../../Redux/dialogsPageReducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst DialogsContainer = compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, { addMessage })\r\n)(Dialogs);\r\n\r\nexport default DialogsContainer;"],"names":["props","path","id","className","s","src","to","person","message","MakeMessage","MakeMyMessage","text","MakeAlienMessage","p","DataMapDialogs","item","map","DataMapMessages","NewMessage","MessageReduxForm","onSubmit","formData","addMessage","maxLength10","Errors","reduxForm","form","handleSubmit","Field","component","Fields","placeholder","name","validate","dialogsPage","dialogsData","messagesData","compose","withAuthRedirect","connect","state","Dialogs"],"sourceRoot":""}